version: '2'
services:
  nats:
    image: nats:0.8.0
    ports:
    - "4222:4222"
    - "8222:8222"
  bitstampticksubscriber:
    build:
        dockerfile: ./services/BitstampTickSubscriber/Dockerfile
        context: ./
    command: --broker nats --registry nats --transport nats --broker_address nats:4222 --registry_address nats:4222 --transport_address nats:4222
    restart: always
    depends_on:
    - nats
  oandaticksubscriber:
    build:
        dockerfile: ./services/OandaTickSubscriber/Dockerfile
        context: ./
    command: --broker nats --registry nats --transport nats --broker_address nats:4222 --registry_address nats:4222 --transport_address nats:4222
    restart: always
    depends_on:
    - nats
  tickrecorder:
    build:
      dockerfile: ./services/TickRecorder/Dockerfile
      context: ./
    restart: always
    command: --broker nats --registry nats --transport nats --broker_address nats:4222 --registry_address nats:4222 --transport_address nats:4222
    depends_on:
    - nats
  java_consumer:
    build: ./services/javaconsumer/
    restart: always
    command: -s nats://nats:4222 "go.micro.srv.TickRecorder.Trade"
    depends_on:
    - nats
  web:
    build:
      dockerfile: ./services/web/Dockerfile
      context: ./
    command: --broker nats --registry nats --transport nats --broker_address nats:4222 --registry_address nats:4222 --transport_address nats:4222 web
    restart: always
    ports:
    - "8082:8082"
    depends_on:
    - nats
  sidecar:
    build:
      dockerfile: ./services/Sidecar/Dockerfile
      context: ./
    command: --broker nats --registry nats --transport nats --broker_address nats:4222 --registry_address nats:4222 --transport_address nats:4222 sidecar
    restart: always
    ports:
    - "8081:8081"
    depends_on:
    - nats
  telegraf:
    build: ./services/telegraf/
    depends_on:
      - nats
      - influx
    restart: always
  influx:
    image: influxdb:0.13-alpine
    ports:
    - "8083:8083"
    - "8086:8086"
    depends_on:
    - nats
  chronograf:
    image: chronograf:0.13
    environment:
      - CHRONOGRAF_BIND=0.0.0.0:10000
    ports:
    - "10000:10000"
